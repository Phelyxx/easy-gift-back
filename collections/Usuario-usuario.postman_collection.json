{
	"info": {
		"_postman_id": "00776e3a-e9d6-4321-9760-d4344fb6c531",
		"name": "Usuario-usuario",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "15053500"
	},
	"item": [
		{
			"name": "Agregar usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()",
							"pm.globals.set(\"usuario_id\", data.id);",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"   pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"nombre\": \"Juana\",\n   \"apellido\": \"Castro\",\n   \"email\": \"juana.castro@gmail.com\",\n   \"bio\": \"Me gusta la astronomia y jugar con mis perros\",\n   \"usuario\": \"juanacastro01\",\n   \"edad\": 21,\n   \"cumpleanios\" : \"2020-01-15\",\n   \"rutaFotoPerfil\": \"https://c8.alamy.com/zooms/9/52c3ea49892f4e5789b31cadac8aa969/2gefnr1.jpg\",\n   \"rutaFotoPortada\": \"https://www.si.edu/sites/default/files/newsdesk/fact_sheets/nhb2015-02891.jpg\",\n   \"genero\": \"Femenino\",\n   \"presupuesto\": 300000,\n   \"disponibilidadDeTiempo\": \"Poco\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/usuarios",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usuarios"
					]
				}
			},
			"response": [
				{
					"name": "Agregar usuario",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"nombre\": \"Juana\",\n   \"apellido\": \"Castro\",\n   \"bio\": \"Me gusta la astronomia y jugar con mis perros\",\n   \"usuario\": \"juanacastro01\",\n   \"cumpleaños\": \"2000-12-10\",\n   \"edad\": 21,\n   \"rutaFotoPerfil\": \"user/fotos/fotoPerfil.jpg\",\n   \"rutaFotoPortada\": \"user/fotos/fotoPortada.jpg\",\n   \"genero\": \"Femenino\",\n   \"presupuesto\": 300000,\n   \"disponibilidadTiempo\": \"Poco\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/usuarios",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usuarios"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"id\": \"310b0872-1d9a-4575-8bb5-8f14dfb86c1c\",\n    \"nombre\": \"Juana\",\n    \"apellido\": \"Castro\",\n    \"bio\": \"Me gusta la astronomia y jugar con mis perros\",\n    \"usuario\": \"juanacastro01\",\n    \"cumpleaños\": \"2000-12-10\",\n    \"edad\": 21,\n    \"rutaFotoPerfil\": \"user/fotos/fotoPerfil.jpg\",\n    \"rutaFotoPortada\": \"user/fotos/fotoPortada.jpg\",\n    \"genero\": \"Femenino\",\n    \"presupuesto\": 300000,\n    \"disponibilidadTiempo\": \"Poco\"\n}"
				}
			]
		},
		{
			"name": "Agregar usuario(amigo)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()",
							"pm.globals.set(\"amigo_id_1\", data.id);",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"   pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"nombre\": \"Esteban\",\n   \"apellido\": \"Vanegas\",\n   \"email\": \"vanegas57@gmail.com\",\n   \"bio\": \"Amante del fulbol y de hacer deporte\",\n   \"usuario\": \"estabnVanegas2001\",\n   \"edad\": 25,\n   \"cumpleanios\" : \"1997-04-23\",\n   \"rutaFotoPerfil\": \"https://c8.alamy.com/zooms/9/52c3ea49892f4e5789b31cadac8aa969/2gefnr1.jpg\",\n   \"rutaFotoPortada\": \"https://www.si.edu/sites/default/files/newsdesk/fact_sheets/nhb2015-02891.jpg\",\n   \"genero\": \"Masculino\",\n   \"presupuesto\": 1000000,\n   \"disponibilidadDeTiempo\": \"Medio\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/usuarios",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usuarios"
					]
				}
			},
			"response": [
				{
					"name": "Agregar usuario",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"nombre\": \"Juana\",\n   \"apellido\": \"Castro\",\n   \"bio\": \"Me gusta la astronomia y jugar con mis perros\",\n   \"usuario\": \"juanacastro01\",\n   \"cumpleaños\": \"2000-12-10\",\n   \"edad\": 21,\n   \"rutaFotoPerfil\": \"user/fotos/fotoPerfil.jpg\",\n   \"rutaFotoPortada\": \"user/fotos/fotoPortada.jpg\",\n   \"genero\": \"Femenino\",\n   \"presupuesto\": 300000,\n   \"disponibilidadTiempo\": \"Poco\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/usuarios",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usuarios"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"nombre\": \"Esteban\",\n    \"apellido\": \"Vanegas\",\n    \"email\": \"vanegas57@gmail.com\",\n    \"bio\": \"Amante del fulbol y de hacer deporte\",\n    \"usuario\": \"estabnVanegas2001\",\n    \"edad\": 25,\n    \"cumpleanios\": \"1997-04-23\",\n    \"rutaFotoPerfil\": \"https://c8.alamy.com/zooms/9/52c3ea49892f4e5789b31cadac8aa969/2gefnr1.jpg\",\n    \"rutaFotoPortada\": \"https://www.si.edu/sites/default/files/newsdesk/fact_sheets/nhb2015-02891.jpg\",\n    \"genero\": \"Masculino\",\n    \"presupuesto\": 1000000,\n    \"disponibilidadDeTiempo\": \"Medio\",\n    \"id\": \"8efd0dc4-0d43-432f-a432-5fb78494c2fc\"\n}"
				}
			]
		},
		{
			"name": "Agregar usuario (amigo)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()",
							"pm.globals.set(\"amigo_id_2\", data.id);",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"   pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"nombre\": \"Manuela\",\n   \"apellido\": \"Ortiz\",\n   \"email\": \"manuOrtiz44@gmail.com\",\n   \"bio\": \"Amo mis gatos y leer ciencia ficción\",\n   \"usuario\": \"Manuela23Orti\",\n   \"edad\": 14,\n   \"cumpleanios\" : \"2005-01-15\",\n   \"rutaFotoPerfil\": \"https://c8.alamy.com/zooms/9/52c3ea49892f4e5789b31cadac8aa969/2gefnr1.jpg\",\n   \"rutaFotoPortada\": \"https://www.si.edu/sites/default/files/newsdesk/fact_sheets/nhb2015-02891.jpg\",\n   \"genero\": \"Femenino\",\n   \"presupuesto\": 150000,\n   \"disponibilidadDeTiempo\": \"Mucho\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/usuarios",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usuarios"
					]
				}
			},
			"response": [
				{
					"name": "Agregar usuario",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/usuarios",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usuarios"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"nombre\": \"Manuela\",\n    \"apellido\": \"Ortiz\",\n    \"email\": \"manuOrtiz44@gmail.com\",\n    \"bio\": \"Amo mis gatos y leer ciencia ficción\",\n    \"usuario\": \"Manuela23Orti\",\n    \"edad\": 14,\n    \"cumpleanios\": \"2005-01-15\",\n    \"rutaFotoPerfil\": \"https://c8.alamy.com/zooms/9/52c3ea49892f4e5789b31cadac8aa969/2gefnr1.jpg\",\n    \"rutaFotoPortada\": \"https://www.si.edu/sites/default/files/newsdesk/fact_sheets/nhb2015-02891.jpg\",\n    \"genero\": \"Femenino\",\n    \"presupuesto\": 150000,\n    \"disponibilidadDeTiempo\": \"Mucho\",\n    \"id\": \"2786ff6b-cbab-4439-9ae0-3feee94a5486\"\n}"
				}
			]
		},
		{
			"name": "Agregar amigo a un usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"   pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/usuarios/{{usuario_id}}/amigos/{{amigo_id_1}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usuarios",
						"{{usuario_id}}",
						"amigos",
						"{{amigo_id_1}}"
					]
				}
			},
			"response": [
				{
					"name": "Agregar amigo a un usuario",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/usuarios/{{usuarioid}}/amigos/{{usuario_id_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usuarios",
								"{{usuarioid}}",
								"amigos",
								"{{usuario_id_1}}"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"id\": \"cd8412fa-a9e1-4b68-8d1c-be316b1e19a3\",\n    \"nombre\": \"Juana\",\n    \"email\": \"juana.castro@gmail.com\",\n    \"bio\": \"Me gusta la astronomia y jugar con mis perros\",\n    \"usuario\": \"juanacastro01\",\n    \"cumpleanios\": \"2020-01-15T05:00:00.000Z\",\n    \"edad\": 21,\n    \"rutaFotoPerfil\": \"https://c8.alamy.com/zooms/9/52c3ea49892f4e5789b31cadac8aa969/2gefnr1.jpg\",\n    \"rutaFotoPortada\": \"https://www.si.edu/sites/default/files/newsdesk/fact_sheets/nhb2015-02891.jpg\",\n    \"genero\": \"Femenino\",\n    \"presupuesto\": 300000,\n    \"disponibilidadDeTiempo\": \"Poco\",\n    \"direcciones\": [],\n    \"amigos\": [\n        {\n            \"id\": \"8efd0dc4-0d43-432f-a432-5fb78494c2fc\",\n            \"nombre\": \"Esteban\",\n            \"email\": \"vanegas57@gmail.com\",\n            \"bio\": \"Amante del fulbol y de hacer deporte\",\n            \"usuario\": \"estabnVanegas2001\",\n            \"cumpleanios\": \"1997-04-23T05:00:00.000Z\",\n            \"edad\": 25,\n            \"rutaFotoPerfil\": \"https://c8.alamy.com/zooms/9/52c3ea49892f4e5789b31cadac8aa969/2gefnr1.jpg\",\n            \"rutaFotoPortada\": \"https://www.si.edu/sites/default/files/newsdesk/fact_sheets/nhb2015-02891.jpg\",\n            \"genero\": \"Masculino\",\n            \"presupuesto\": 1000000,\n            \"disponibilidadDeTiempo\": \"Medio\"\n        }\n    ],\n    \"carrito\": null,\n    \"resenas\": [],\n    \"intereses\": [],\n    \"wishlist\": []\n}"
				}
			]
		},
		{
			"name": "Agregar amigo que no existe a un usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"El amigo con el id dado no fue encontrado\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/usuarios/{{usuario_id}}/amigos/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usuarios",
						"{{usuario_id}}",
						"amigos",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"name": "Agregar amigo que no existe a un usuario",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/usuarios/{{usuarioid}}/amigos/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usuarios",
								"{{usuarioid}}",
								"amigos",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"El usuario con el id dado no fue encontrado\"\n}"
				}
			]
		},
		{
			"name": "Agregar un amigo a un usuario que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"El usuario con el id dado no fue encontrado\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/usuarios/00000000-0000-0000-0000-000000000000/amigos/{{amigo_id_1}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usuarios",
						"00000000-0000-0000-0000-000000000000",
						"amigos",
						"{{amigo_id_1}}"
					]
				}
			},
			"response": [
				{
					"name": "Agregar un amigo a un usuario que no existe",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/usuarios/00000000-0000-0000-0000-000000000000/amigos/{{usuario_id_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usuarios",
								"00000000-0000-0000-0000-000000000000",
								"amigos",
								"{{usuario_id_1}}"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"El usuario con el id dado no fue encontrado\"\n}"
				}
			]
		},
		{
			"name": "Obtener amigo de un usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/usuarios/{{usuario_id}}/amigos/{{amigo_id_1}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usuarios",
						"{{usuario_id}}",
						"amigos",
						"{{amigo_id_1}}"
					]
				}
			},
			"response": [
				{
					"name": "Obtener amigo de un usuario",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/usuarios/{{usuario_id}}/amigos/{{amigo_id_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usuarios",
								"{{usuario_id}}",
								"amigos",
								"{{amigo_id_1}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"id\": \"e59b1839-3b84-4181-9e9f-026f0a212ddb\",\n    \"nombre\": \"Esteban\",\n    \"email\": \"vanegas57@gmail.com\",\n    \"bio\": \"Amante del fulbol y de hacer deporte\",\n    \"usuario\": \"estabnVanegas2001\",\n    \"cumpleanios\": \"1997-04-23T05:00:00.000Z\",\n    \"edad\": 25,\n    \"rutaFotoPerfil\": \"https://c8.alamy.com/zooms/9/52c3ea49892f4e5789b31cadac8aa969/2gefnr1.jpg\",\n    \"rutaFotoPortada\": \"https://www.si.edu/sites/default/files/newsdesk/fact_sheets/nhb2015-02891.jpg\",\n    \"genero\": \"Masculino\",\n    \"presupuesto\": 1000000,\n    \"disponibilidadDeTiempo\": \"Medio\"\n}"
				}
			]
		},
		{
			"name": "Obtener un amigo que no existe de un usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"El amigo con el id dado no fue encontrado\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/usuarios/{{usuario_id}}/amigos/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usuarios",
						"{{usuario_id}}",
						"amigos",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"name": "Obtener un amigo que no existe de un usuario",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/usuarios/{{usuario_id}}/amigos/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usuarios",
								"{{usuario_id}}",
								"amigos",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"El amigo con el id dado no fue encontrado\"\n}"
				}
			]
		},
		{
			"name": "Obtener un amigo de un usuario que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"El usuario con el id dado no fue encontrado\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/usuarios/00000000-0000-0000-0000-000000000000/amigos/{{amigo_id_1}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usuarios",
						"00000000-0000-0000-0000-000000000000",
						"amigos",
						"{{amigo_id_1}}"
					]
				}
			},
			"response": [
				{
					"name": "Obtener un amigo de un usuario que no existe",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/usuarios/00000000-0000-0000-0000-000000000000/amigos/{{amigo_id_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usuarios",
								"00000000-0000-0000-0000-000000000000",
								"amigos",
								"{{amigo_id_1}}"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"El usuario con el id dado no fue encontrado\"\n}"
				}
			]
		},
		{
			"name": "Obtener un amigo que no esta asociado a un usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {",
							"   pm.response.to.have.status(412);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"El amigo con el id dado no esta asociado a ese usuario\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/usuarios/{{usuario_id}}/amigos/{{amigo_id_2}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usuarios",
						"{{usuario_id}}",
						"amigos",
						"{{amigo_id_2}}"
					]
				}
			},
			"response": [
				{
					"name": "Obtener un amigo que no esta asociado a un usuario",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/usuarios/{{usuario_id}}/amigos/{{amigo_id_2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usuarios",
								"{{usuario_id}}",
								"amigos",
								"{{amigo_id_2}}"
							]
						}
					},
					"status": "Precondition Failed",
					"code": 412,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n   \"statusCode\": 412,\n   \"message\": \"El amigo con el id dado no esta asoaciado con el usuario\"\n}"
				}
			]
		},
		{
			"name": "Obtener amigos de un usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/usuarios/{{usuario_id}}/amigos",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usuarios",
						"{{usuario_id}}",
						"amigos"
					]
				}
			},
			"response": [
				{
					"name": "Obtener amigos de un usuario",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/usuarios/{{usuario_id}}/amigos",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usuarios",
								"{{usuario_id}}",
								"amigos"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "[\n    \n    {\n        \"id\": \"8efd0dc4-0d43-432f-a432-5fb78494c2fc\",\n        \"nombre\": \"Esteban\",\n        \"email\": \"vanegas57@gmail.com\",\n        \"bio\": \"Amante del fulbol y de hacer deporte\",\n        \"usuario\": \"estabnVanegas2001\",\n        \"cumpleanios\": \"1997-04-23T05:00:00.000Z\",\n        \"edad\": 25,\n        \"rutaFotoPerfil\": \"https://c8.alamy.com/zooms/9/52c3ea49892f4e5789b31cadac8aa969/2gefnr1.jpg\",\n        \"rutaFotoPortada\": \"https://www.si.edu/sites/default/files/newsdesk/fact_sheets/nhb2015-02891.jpg\",\n        \"genero\": \"Masculino\",\n        \"presupuesto\": 1000000,\n        \"disponibilidadDeTiempo\": \"Medio\"\n    }\n]"
				}
			]
		},
		{
			"name": "Obtener los amigos de un usuario que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"El usuario con el id dado no fue encontrado\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/usuarios/00000000-0000-0000-0000-000000000000/amigos",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usuarios",
						"00000000-0000-0000-0000-000000000000",
						"amigos"
					]
				}
			},
			"response": [
				{
					"name": "Obtener los amigos de un usuario que no existe",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/usuarios/00000000-0000-0000-0000-000000000000/amigos",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usuarios",
								"00000000-0000-0000-0000-000000000000",
								"amigos"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"El usuario con el id dado no fue encontrado\"\n}"
				}
			]
		},
		{
			"name": "Actualizar lista de amigos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\n   {\n       \"id\": \"{{amigo_id_2}}\"\n   }\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/usuarios/{{usuario_id}}/amigos",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usuarios",
						"{{usuario_id}}",
						"amigos"
					]
				}
			},
			"response": [
				{
					"name": "Actualizar lista de amigos",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n   {\n       \"id\": \"{{user_id3}}\"\n   }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/usuarios/{{usuario_id}}/amigos",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usuarios",
								"{{usuario_id}}",
								"amigos"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"id\": \"cd8412fa-a9e1-4b68-8d1c-be316b1e19a3\",\n    \"nombre\": \"Juana\",\n    \"email\": \"juana.castro@gmail.com\",\n    \"bio\": \"Me gusta la astronomia y jugar con mis perros\",\n    \"usuario\": \"juanacastro0001\",\n    \"cumpleanios\": \"2001-01-15T05:00:00.000Z\",\n    \"edad\": 21,\n    \"rutaFotoPerfil\": \"https://c8.alamy.com/zooms/9/52c3ea49892f4e5789b31cadac8aa969/2gefnr1.jpg\",\n    \"rutaFotoPortada\": \"https://www.si.edu/sites/default/files/newsdesk/fact_sheets/nhb2015-02891.jpg\",\n    \"genero\": \"Femenino\",\n    \"presupuesto\": 500000,\n    \"disponibilidadDeTiempo\": \"Poco\",\n    \"amigos\": [\n        {\n            \"id\": \"8f333fe7-ce2f-493d-8527-e8602e021c9b\"\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "Actualizar los amigos que no existen de un usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"El amigo con el id dado no fue encontrado\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\n   {\n       \"id\": \"00000000-0000-0000-0000-000000000000\"\n   }\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/usuarios/{{usuario_id}}/amigos",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usuarios",
						"{{usuario_id}}",
						"amigos"
					]
				}
			},
			"response": [
				{
					"name": "Actualizar los amigos de un usuario que no existe",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/usuarios/{{usuario_id}}/amigos",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usuarios",
								"{{usuario_id}}",
								"amigos"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"El amigo con el id dado no fue encontrado\"\n}"
				}
			]
		},
		{
			"name": "Actualizar los amigos de un usuario que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"El usuario con el id dado no fue encontrado\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\n   {\n       \"id\": \"{{amigo_id_2}}\"\n   }\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/usuarios/00000000-0000-0000-0000-000000000000/amigos",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usuarios",
						"00000000-0000-0000-0000-000000000000",
						"amigos"
					]
				}
			},
			"response": [
				{
					"name": "Actualizar los amigos de un usuario que no existe",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n   {\n       \"id\": \"{{user_id_2}}\"\n   }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/usuarios/00000000-0000-0000-0000-000000000000/amigos",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usuarios",
								"00000000-0000-0000-0000-000000000000",
								"amigos"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"El usuario con el id dado no fue encontrado\"\n}"
				}
			]
		},
		{
			"name": "Borrar un amigo de un usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"   pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/usuarios/{{usuario_id}}/amigos/{{amigo_id_2}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usuarios",
						"{{usuario_id}}",
						"amigos",
						"{{amigo_id_2}}"
					]
				}
			},
			"response": [
				{
					"name": "Borrar un amigo de un usuario",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/usuarios/{{usuario_id}}/amigos/{{amigo_id_2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usuarios",
								"{{usuario_id}}",
								"amigos",
								"{{amigo_id_2}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Borrar un amigo de un usuario que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"El usuario con el id dado no fue encontrado\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/usuarios/00000000-0000-0000-0000-000000000000/amigos/{{amigo_id_1}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usuarios",
						"00000000-0000-0000-0000-000000000000",
						"amigos",
						"{{amigo_id_1}}"
					]
				}
			},
			"response": [
				{
					"name": "Borrar un amigo de un usuario que no existe",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/usuarios/00000000-0000-0000-0000-000000000000/amigos/{{amigo_id_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usuarios",
								"00000000-0000-0000-0000-000000000000",
								"amigos",
								"{{amigo_id_1}}"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Borrar un amigo que no existe de un usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"El amigo con el id dado no fue encontrado\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/usuarios/{{usuario_id}}/amigos/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usuarios",
						"{{usuario_id}}",
						"amigos",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"name": "Borrar un amigo que no existe de un usuario",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/usuarios/{{usuario_id}}/amigos/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usuarios",
								"{{usuario_id}}",
								"amigos",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Borrar un amigo que no esta asociado a un usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {",
							"   pm.response.to.have.status(412);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"El amigo con el id dado no esta asociado al usuario\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/usuarios/{{usuario_id}}/amigos/{{amigo_id_1}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usuarios",
						"{{usuario_id}}",
						"amigos",
						"{{amigo_id_1}}"
					]
				}
			},
			"response": [
				{
					"name": "Borrar un amigo que no esta asociado a un usuario",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/usuarios/{{usuarioid}}/amigos/{{usuario_id_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usuarios",
								"{{usuarioid}}",
								"amigos",
								"{{usuario_id_1}}"
							]
						}
					},
					"status": "Precondition Failed",
					"code": 412,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Eliminar usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"   pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/usuarios/{{usuario_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usuarios",
						"{{usuario_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Eliminar usuario",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/usuarios/{{usuarioid}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usuarios",
								"{{usuarioid}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Eliminar amigo 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"   pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/usuarios/{{amigo_id_1}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usuarios",
						"{{amigo_id_1}}"
					]
				}
			},
			"response": [
				{
					"name": "Eliminar usuario",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/usuarios/{{amigo_id_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usuarios",
								"{{amigo_id_1}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Eliminar amigo 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"   pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/usuarios/{{amigo_id_2}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usuarios",
						"{{amigo_id_2}}"
					]
				}
			},
			"response": [
				{
					"name": "Eliminar usuario",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/usuarios/{{amigo_id_2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usuarios",
								"{{amigo_id_2}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "localhost:3000/api/v1",
			"type": "string"
		}
	]
}