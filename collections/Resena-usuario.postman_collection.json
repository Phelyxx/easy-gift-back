{
	"info": {
		"_postman_id": "5676bdd2-0386-4367-8fe0-6b9ac10b172f",
		"name": "Resena-usuario",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12491341"
	},
	"item": [
		{
			"name": "Agregar usuario Copy 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()",
							"pm.globals.set(\"usuario_id\", data.id);",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"   pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"nombre\": \"Juana\",\n   \"apellido\": \"Castro\",\n   \"email\": \"juana.castro@gmail.com\",\n   \"bio\": \"Me gusta la astronomia y jugar con mis perros\",\n   \"usuario\": \"juanacastro01\",\n   \"edad\": 21,\n   \"cumpleanios\" : \"2001-01-15\",\n   \"rutaFotoPerfil\": \"https://c8.alamy.com/zooms/9/52c3ea49892f4e5789b31cadac8aa969/2gefnr1.jpg\",\n   \"rutaFotoPortada\": \"https://www.si.edu/sites/default/files/newsdesk/fact_sheets/nhb2015-02891.jpg\",\n   \"genero\": \"Femenino\",\n   \"presupuesto\": 300000,\n   \"disponibilidadDeTiempo\": \"Poco\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/usuarios",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usuarios"
					]
				}
			},
			"response": [
				{
					"name": "Agregar usuario",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"nombre\": \"Juana\",\n   \"apellido\": \"Castro\",\n   \"bio\": \"Me gusta la astronomia y jugar con mis perros\",\n   \"usuario\": \"juanacastro01\",\n   \"cumpleaños\": \"2000-12-10\",\n   \"edad\": 21,\n   \"rutaFotoPerfil\": \"user/fotos/fotoPerfil.jpg\",\n   \"rutaFotoPortada\": \"user/fotos/fotoPortada.jpg\",\n   \"genero\": \"Femenino\",\n   \"presupuesto\": 300000,\n   \"disponibilidadTiempo\": \"Poco\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/usuarios",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usuarios"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": "{\n    \"id\": \"310b0872-1d9a-4575-8bb5-8f14dfb86c1c\",\n    \"nombre\": \"Juana\",\n    \"apellido\": \"Castro\",\n    \"bio\": \"Me gusta la astronomia y jugar con mis perros\",\n    \"usuario\": \"juanacastro01\",\n    \"cumpleaños\": \"2000-12-10\",\n    \"edad\": 21,\n    \"rutaFotoPerfil\": \"user/fotos/fotoPerfil.jpg\",\n    \"rutaFotoPortada\": \"user/fotos/fotoPortada.jpg\",\n    \"genero\": \"Femenino\",\n    \"presupuesto\": 300000,\n    \"disponibilidadTiempo\": \"Poco\"\n}"
				}
			]
		},
		{
			"name": "add resena Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"resena_id\", data.id);\r",
							"pm.globals.set(\"resena_id_f\", 0);\r",
							"\r",
							"pm.test('Status code is 201', function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"titulo\": \"Observaciones\",\r\n    \"descripcion\": \"El producto es muy lindo, tamaño adecuadi :V\",\r\n    \"fecha\": \"2020-06-06\",\r\n    \"calificacion\": 10\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/resena",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"resena"
					]
				},
				"description": "La peticion de una nueva reseña, La api da crea el recurso con la nueva id."
			},
			"response": []
		},
		{
			"name": "add resena a usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/usuarios/{{usuario_id}}/resenas/{{resena_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usuarios",
						"{{usuario_id}}",
						"resenas",
						"{{resena_id}}"
					]
				},
				"description": "La peticion de añadir una reseña a un producto, la api añade la reseña con el id dado al producto con el id dado."
			},
			"response": []
		},
		{
			"name": "add resena inexistente a usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The resena with the given id was not found\");\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/usuarios/{{usuario_id}}/resenas/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usuarios",
						"{{usuario_id}}",
						"resenas",
						"00000000-0000-0000-0000-000000000000"
					]
				},
				"description": "La peticion de añadir una reseña inexistente a un producto, la api indica que no existe la reseña dada ."
			},
			"response": []
		},
		{
			"name": "add resena a usuario inexistente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The usuario with the given id was not found\");\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/usuarios/00000000-0000-0000-0000-000000000000/resenas/{{resena_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usuarios",
						"00000000-0000-0000-0000-000000000000",
						"resenas",
						"{{resena_id}}"
					]
				},
				"description": "La peticion de añadir una reseña a un producto inexistente, la api indica que el producto no existe."
			},
			"response": []
		},
		{
			"name": "get resenausuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/usuarios/{{usuario_id}}/resenas/{{resena_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usuarios",
						"{{usuario_id}}",
						"resenas",
						"{{resena_id}}"
					]
				},
				"description": "La peticion de obtiene una reseña de producto, la api muestra la reseña asociada al regalo."
			},
			"response": []
		},
		{
			"name": "get resena inexistente de usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The resena with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/usuarios/{{usuario_id}}/resenas/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usuarios",
						"{{usuario_id}}",
						"resenas",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": []
		},
		{
			"name": "get resena de usuario inexistente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The usuario with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/usuarios/00000000-0000-0000-0000-000000000000/resenas/{{resena_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usuarios",
						"00000000-0000-0000-0000-000000000000",
						"resenas",
						"{{resena_id}}"
					]
				},
				"description": "La peticion de obtiene una reseña de un regalo inexistente, la api muestra que el regalo no exisrte."
			},
			"response": []
		},
		{
			"name": "Agregar usuario Copy 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()",
							"pm.globals.set(\"usuario_id_noasociada\", data.id);",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"   pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"nombre\": \"Juana\",\n   \"apellido\": \"Castro\",\n   \"email\": \"juana.castro@gmail.com\",\n   \"bio\": \"Me gusta la astronomia y jugar con mis perros\",\n   \"usuario\": \"juanacastro01\",\n   \"edad\": 21,\n   \"cumpleanios\" : \"2001-01-15\",\n   \"rutaFotoPerfil\": \"https://c8.alamy.com/zooms/9/52c3ea49892f4e5789b31cadac8aa969/2gefnr1.jpg\",\n   \"rutaFotoPortada\": \"https://www.si.edu/sites/default/files/newsdesk/fact_sheets/nhb2015-02891.jpg\",\n   \"genero\": \"Femenino\",\n   \"presupuesto\": 300000,\n   \"disponibilidadDeTiempo\": \"Poco\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/usuarios",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usuarios"
					]
				}
			},
			"response": [
				{
					"name": "Agregar usuario",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"nombre\": \"Juana\",\n   \"apellido\": \"Castro\",\n   \"bio\": \"Me gusta la astronomia y jugar con mis perros\",\n   \"usuario\": \"juanacastro01\",\n   \"cumpleaños\": \"2000-12-10\",\n   \"edad\": 21,\n   \"rutaFotoPerfil\": \"user/fotos/fotoPerfil.jpg\",\n   \"rutaFotoPortada\": \"user/fotos/fotoPortada.jpg\",\n   \"genero\": \"Femenino\",\n   \"presupuesto\": 300000,\n   \"disponibilidadTiempo\": \"Poco\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/usuarios",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usuarios"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": "{\n    \"id\": \"310b0872-1d9a-4575-8bb5-8f14dfb86c1c\",\n    \"nombre\": \"Juana\",\n    \"apellido\": \"Castro\",\n    \"bio\": \"Me gusta la astronomia y jugar con mis perros\",\n    \"usuario\": \"juanacastro01\",\n    \"cumpleaños\": \"2000-12-10\",\n    \"edad\": 21,\n    \"rutaFotoPerfil\": \"user/fotos/fotoPerfil.jpg\",\n    \"rutaFotoPortada\": \"user/fotos/fotoPortada.jpg\",\n    \"genero\": \"Femenino\",\n    \"presupuesto\": 300000,\n    \"disponibilidadTiempo\": \"Poco\"\n}"
				}
			]
		},
		{
			"name": "add resena Copy 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"resena_id_noasociada\", data.id);\r",
							"pm.globals.set(\"resena_id_f\", 0);\r",
							"\r",
							"pm.test('Status code is 201', function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"titulo\": \"Observaciones\",\r\n    \"descripcion\": \"El producto es muy lindo, tamaño adecuadi :V\",\r\n    \"fecha\": \"2020-06-06\",\r\n    \"calificacion\": 10\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/resena",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"resena"
					]
				},
				"description": "La peticion de una nueva reseña, La api da crea el recurso con la nueva id."
			},
			"response": []
		},
		{
			"name": "get resena no asociada a el usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {\r",
							"   pm.response.to.have.status(412);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The resena with the given id is not associated to the usuario\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/usuarios/{{usuario_id_noasociada}}/resenas/{{resena_id_noasociada}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usuarios",
						"{{usuario_id_noasociada}}",
						"resenas",
						"{{resena_id_noasociada}}"
					]
				},
				"description": "La peticion de obtiene una reseña de un regalo al que no esat asociada, la api muestra que el regalo no estan asoaciadas."
			},
			"response": []
		},
		{
			"name": "get resenas del usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/usuarios/{{usuario_id}}/resenas",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usuarios",
						"{{usuario_id}}",
						"resenas"
					]
				},
				"description": "Se genera una peticon de obtener todas las reseñas de un regalio dado, la api retorna un json con una lista de las reseñas."
			},
			"response": []
		},
		{
			"name": "get resena de usuario inexistente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The usuario with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/usuarios/00000000-0000-0000-0000-000000000000/resenas",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usuarios",
						"00000000-0000-0000-0000-000000000000",
						"resenas"
					]
				},
				"description": "Se genera una peticon de obtener todas las reseñas de un regalo inexistente, la api retorna un error que dice que el regalo no existe"
			},
			"response": []
		},
		{
			"name": "add resena Copy 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"resena_id_2\", data.id);\r",
							"pm.globals.set(\"resena_id_f\", 0);\r",
							"\r",
							"pm.test('Status code is 201', function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"titulo\": \"Observaciones\",\r\n    \"descripcion\": \"El producto es muy lindo, tamaño adecuadi :V\",\r\n    \"fecha\": \"2020-06-06\",\r\n    \"calificacion\": 10\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/resena",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"resena"
					]
				},
				"description": "La peticion de una nueva reseña, La api da crea el recurso con la nueva id."
			},
			"response": []
		},
		{
			"name": "update resenas de usuario Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n {\r\n    \"id\": \"{{resena_id}}\",\r\n    \"titulo\": \"Observaciones\",\r\n    \"descripcion\": \"El producto es muy lindo, tamaño adecuadi :V\",\r\n    \"fecha\": \"2020-06-06\",\r\n    \"calificacion\": 10\r\n}\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/usuarios/{{usuario_id}}/resenas",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usuarios",
						"{{usuario_id}}",
						"resenas"
					]
				},
				"description": "Se genera una peticon para actualizar la reseñas con un id dado de un regalio dado, la api la reseña con la informacion actualizada."
			},
			"response": []
		},
		{
			"name": "update wishlist inexistente de usuario Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The resena with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n   {\r\n       \"id\": \"00000000-0000-0000-0000-000000000000\"\r\n   }\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/usuarios/{{usuario_id}}/resenas",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usuarios",
						"{{usuario_id}}",
						"resenas"
					]
				},
				"description": "Se genera una peticon para actualizar la reseñas inexistente de un regalio dado, la api notifica que la reseña no existe."
			},
			"response": []
		},
		{
			"name": "update resemade usuario inexistente Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The usuario with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n   {\r\n       \"id\": \"{{resena_id}}\"\r\n   }\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/usuarios/00000000-0000-0000-0000-000000000000/resenas",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usuarios",
						"00000000-0000-0000-0000-000000000000",
						"resenas"
					]
				},
				"description": "Se genera una peticon para actualizar la reseñas de un regalio inexistente , la api notifica que el regalo no existe."
			},
			"response": []
		},
		{
			"name": "Agregar usuario Copy 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()",
							"pm.globals.set(\"usuario_id_1\", data.id);",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"   pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"nombre\": \"Juana\",\n   \"apellido\": \"Castro\",\n   \"email\": \"juana.castro@gmail.com\",\n   \"bio\": \"Me gusta la astronomia y jugar con mis perros\",\n   \"usuario\": \"juanacastro01\",\n   \"edad\": 21,\n   \"cumpleanios\" : \"2001-01-15\",\n   \"rutaFotoPerfil\": \"https://c8.alamy.com/zooms/9/52c3ea49892f4e5789b31cadac8aa969/2gefnr1.jpg\",\n   \"rutaFotoPortada\": \"https://www.si.edu/sites/default/files/newsdesk/fact_sheets/nhb2015-02891.jpg\",\n   \"genero\": \"Femenino\",\n   \"presupuesto\": 300000,\n   \"disponibilidadDeTiempo\": \"Poco\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/usuarios",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usuarios"
					]
				}
			},
			"response": [
				{
					"name": "Agregar usuario",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"nombre\": \"Juana\",\n   \"apellido\": \"Castro\",\n   \"bio\": \"Me gusta la astronomia y jugar con mis perros\",\n   \"usuario\": \"juanacastro01\",\n   \"cumpleaños\": \"2000-12-10\",\n   \"edad\": 21,\n   \"rutaFotoPerfil\": \"user/fotos/fotoPerfil.jpg\",\n   \"rutaFotoPortada\": \"user/fotos/fotoPortada.jpg\",\n   \"genero\": \"Femenino\",\n   \"presupuesto\": 300000,\n   \"disponibilidadTiempo\": \"Poco\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/usuarios",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usuarios"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": "{\n    \"id\": \"310b0872-1d9a-4575-8bb5-8f14dfb86c1c\",\n    \"nombre\": \"Juana\",\n    \"apellido\": \"Castro\",\n    \"bio\": \"Me gusta la astronomia y jugar con mis perros\",\n    \"usuario\": \"juanacastro01\",\n    \"cumpleaños\": \"2000-12-10\",\n    \"edad\": 21,\n    \"rutaFotoPerfil\": \"user/fotos/fotoPerfil.jpg\",\n    \"rutaFotoPortada\": \"user/fotos/fotoPortada.jpg\",\n    \"genero\": \"Femenino\",\n    \"presupuesto\": 300000,\n    \"disponibilidadTiempo\": \"Poco\"\n}"
				}
			]
		},
		{
			"name": "add resena Copy 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"resena_id_1\", data.id);\r",
							"pm.globals.set(\"resena_id_f\", 0);\r",
							"\r",
							"pm.test('Status code is 201', function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"titulo\": \"Observaciones\",\r\n    \"descripcion\": \"El producto es muy lindo, tamaño adecuadi :V\",\r\n    \"fecha\": \"2020-06-06\",\r\n    \"calificacion\": 10\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/resena",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"resena"
					]
				},
				"description": "La peticion de una nueva reseña, La api da crea el recurso con la nueva id."
			},
			"response": []
		},
		{
			"name": "add resena a usuario Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/usuarios/{{usuario_id_1}}/resenas/{{resena_id_1}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usuarios",
						"{{usuario_id_1}}",
						"resenas",
						"{{resena_id_1}}"
					]
				},
				"description": "La peticion de añadir una reseña a un producto, la api añade la reseña con el id dado al producto con el id dado."
			},
			"response": []
		},
		{
			"name": "delet resena usuario Copy 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/usuarios/{{usuario_id_1}}/resenas/{{resena_id_1}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usuarios",
						"{{usuario_id_1}}",
						"resenas",
						"{{resena_id_1}}"
					]
				},
				"description": "Se genera una peticion de eliminar una reseña de un regalo, la api elimina la reseña del regalo y no retorna mas informacionm."
			},
			"response": []
		},
		{
			"name": "delet resena inexistente de usuario Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The resena with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/usuarios/{{usuario_id}}/resenas/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usuarios",
						"{{usuario_id}}",
						"resenas",
						"00000000-0000-0000-0000-000000000000"
					]
				},
				"description": "Se genera una peticion de eliminar una reseña inexistente de un regalo, la api notifica que la reseña no existe."
			},
			"response": []
		},
		{
			"name": "delet resena de usuario inexistente Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The usuario with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/usuarios/00000000-0000-0000-0000-000000000000/resenas/{{resena_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usuarios",
						"00000000-0000-0000-0000-000000000000",
						"resenas",
						"{{resena_id}}"
					]
				},
				"description": "Se genera una peticion de eliminar una reseña de un regalo inexistente , la api notifica que el regalo no existe."
			},
			"response": []
		},
		{
			"name": "delet wishlist de usuario no asociados Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {\r",
							"   pm.response.to.have.status(412);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The resena with the given id is not associated to the usuario\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/usuarios/{{usuario_id}}/resenas/{{resena_id_noasociada}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usuarios",
						"{{usuario_id}}",
						"resenas",
						"{{resena_id_noasociada}}"
					]
				},
				"description": "Se hace la peticion de eliminar una reseña de un regalo al que no esta asociado, la api notifica que esta peticion es erronea"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": " http://localhost:3000/api/v1"
		}
	]
}